{"version":3,"sources":["MyData.js","App.js","index.js"],"names":["MyData","rawData","useState","isModalVisible","setIsModalVisible","modalContent","setModalContent","columns","title","dataIndex","key","render","text","onClick","data","map","el","name","projects","console","log","showModal","branches","tag","color","toUpperCase","colors","visible","onOk","onCancel","proj","index","projKeys","Object","keys","style","textAlign","ele","dataSource","App","Search","Input","Header","Layout","Footer","Sider","Content","Menu","SubMenu","setData","query","setQuery","branchQuery","setBranchQuery","useEffect","axios","get","then","res","branchResults","branchFuse","Fuse","tokenize","threshold","search","branchDataResults","length","result","item","results","matchAllTokens","dataResults","filterHandler","branch","prev","className","width","backgroundColor","marginBottom","type","icon","DownloadOutlined","size","placeholder","enterButton","prefix","SearchOutlined","onChange","currentTarget","value","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0d942c3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Table, Tag, Modal } from \"antd\";\r\n\r\nexport default function MyData(rawData) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalContent, setModalContent] = useState([\"Sphagetti Code\"]);\r\n\r\n  const showModal = (text) => {\r\n    setIsModalVisible(true);\r\n    rawData.data.map((el) => {\r\n      if (el.name === text) {\r\n        setModalContent(el.projects);\r\n        // console.log(el.projects)\r\n      }\r\n    });\r\n    // setModalContent(text);\r\n    console.log(rawData);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <span onClick={() => showModal(text)}>{text}</span>,\r\n    },\r\n    {\r\n      title: \"Industry\",\r\n      dataIndex: \"industry\",\r\n      key: \"industry\",\r\n    },\r\n    {\r\n      title: \"location\",\r\n      dataIndex: \"location\",\r\n      key: \"location\",\r\n    },\r\n\r\n    {\r\n      title: \"Branches\",\r\n      dataIndex: \"branches\",\r\n      key: \"branches\",\r\n      render: (branches) => (\r\n        <div>\r\n          {branches.map((tag) => {\r\n            let color = \"pink\";\r\n            if (tag === \"A7\") color = \"geekblue\";\r\n            if (tag === \"A3\") color = \"gold\";\r\n            if (tag === \"A8\") color = \"lime\";\r\n            if (tag === \"AA\") color = \"green\";\r\n            if (tag === \"Any\") color = \"cyan\";\r\n            if (tag === \"A4\") color = \"orange\";\r\n            if (tag === \"A1\") color = \"red\";\r\n            if (tag === \"A2\") color = \"magenta\";\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const colors = [\r\n    \"#ff9c6e\",\r\n    \"#ffa940\",\r\n    \"#ffc53d\",\r\n    \"#ffec3d\",\r\n    \"#f759ab\",\r\n    \"#9254de\"    \r\n  ]\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Project Description\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {\r\n          <div>\r\n            {modalContent.map((proj, index) => {\r\n              let projKeys = Object.keys(proj);\r\n              return (\r\n                <div style={{ textAlign: \"left\" }}>\r\n                  <Tag color={colors[index]}>#{index + 1}</Tag>\r\n\r\n                  {projKeys.map((ele) => (\r\n                    <div>\r\n                      <b>{ele.toUpperCase()}</b> : {proj[ele]}\r\n                    </div>\r\n                  ))}\r\n                  <br></br>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        }\r\n      </Modal>\r\n      <Table columns={columns} dataSource={rawData.data} />\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Input, Space, Layout } from \"antd\";\nimport { Menu, Card, Tag, Button } from \"antd\";\nimport { SearchOutlined, DownloadOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport Fuse from \"fuse.js\";\nimport MyData from \"./MyData\";\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nfunction App() {\n  const { Search } = Input;\n  const { Header, Footer, Sider, Content } = Layout;\n  const { SubMenu } = Menu;\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [csv, setCsv] = useState([]);\n  const [branchQuery, setBranchQuery] = useState([]);\n  //https://raw.githubusercontent.com/bitsacm/ps1data/master/src/data/ps1_data.json\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://raw.githubusercontent.com/bitsacm/ps1data/master/src/data/ps1_data.json\"\n      )\n      .then((res) => setData(res.data));\n  }, []);\n\n  const options = {\n    // isCaseSensitive: false,\n    // includeScore: false,\n    // shouldSort: true,\n    // includeMatches: false,\n    // findAllMatches: false,\n    // minMatchCharLength: 1,\n    // location: 0,\n    threshold: 0.2,\n    // distance: 100,\n    // useExtendedSearch: false,\n    // ignoreLocation: false,\n    // ignoreFieldNorm: false,\n    tokenize: true,\n    matchAllTokens:true,\n    keys: [\n      \"name\", \n      \"industry\", \n      \"location\", \n      \"branches\"\n    ]\n  };\n\n\n\n  // const fuse = new Fuse(data, options);\n  // const results = fuse.search(query);\n  // let dataResults = query ? results.map((result) => result.item) : data;\n\n  const branchFuse = new Fuse(data, \n    {\n      keys: [\"branches\", \"industry\"],\n      tokenize: false,\n      threshold: 0.6\n    }\n    );\n   let branchResults;\n  branchQuery.map(el => {\n     branchResults = branchFuse.search(el)\n  })\n  let branchDataResults = branchQuery.length ? branchResults.map((result) => result.item) : data;\n\n\n  const fuse = new Fuse(branchDataResults, options);\n  const results = fuse.search(query);\n  let dataResults = query ? results.map((result) => result.item) : branchDataResults;\n  \n  \n\n  const branch = [\n    \"ANY\",\n    \"B1\",\n    \"B2\",\n    \"B3\",\n    \"B4\",\n    \"B5\",\n    \"AA\",\n    \"A1\",\n    \"A2\",\n    \"A3\",\n    \"A4\",\n    \"A5\",\n    \"A7\",\n    \"A8\",\n    \"C6\",\n  ];\n  const industry = [\n    \"ELECTRONICS\",\n    \"FINANCE AND MGMT\",\n    \"MECHANICAL\",\n    \"CHEMICAL\",\n    \" CEMENT\",\n    \"INFRASTRUCTURE\",\n    \"IT\",\n    \"COMPUTER SCIENCE\",\n    \"HEALTH CARE\",\n    \"GOVT RESEARCH LAB\",\n    \"STEEL\",\n    \"OTHERS\",\n  ];\n  const colors = [\n    \"magenta\",\n    \"red\",\n    \"orange\",\n    \"gold\",\n    \"lime\",\n    \"green\",\n    \"cyan\",\n    \"blue\",\n    \"geekblue\",\n    \"purple\",\n  ];\n\n  const queryHandler = ({ currentTarget = {} }) => {\n    const { value } = currentTarget;\n    setQuery(value);\n  };\n\n  const filterHandler = (branch) => {\n    // console.log(dataResults);\n    // setBranchQuery(prev => prev?[...prev, branch]:prev);\n    // dataResults = dataResults.map(el => {\n    //   if(el.branches){\n    //     if(el.branches.indexOf(branch)!==-1) return el;\n    //   }\n    // })\n    setBranchQuery(prev => [...prev, branch])\n    console.log(branchQuery)\n    // setQuery(prevQ => prevQ + \" \" + branch)\n  }\n  return (\n    <div>\n      <Layout>\n        <Header className=\"header\">\n          <h1 style={{ color: \"#fffbe6\" }}>PS1 HELPER</h1>\n        </Header>\n        <Layout>\n          <Sider width={300} style={{ backgroundColor: \"#fff\" }}>\n            <Card title=\"FILTER BY BRANCH\">\n              {branch.map((el, index) => (\n                <Tag\n                  key={index}\n                  onClick={() => filterHandler(el)}\n                  color={colors[index]}\n                  style={{ marginBottom: \"10px\" }}\n                >\n                  {el}\n                </Tag>\n              ))}\n            </Card>\n\n            <Card title=\"FILTER BY INDUSTRY\">\n              {industry.map((el, index) => (\n                <Tag\n                  key={index}\n                  color={colors[index] + \"-inverse\"}\n                  style={{ marginBottom: \"10px\" }}\n                  onClick={() => filterHandler(el)}\n                >\n                  {el}\n                </Tag>\n              ))}\n            </Card>\n            <Button type=\"primary\" icon={<DownloadOutlined />} size=\"large\">\n              <CSVLink data={dataResults}>\n                <span style={{ color: \"#fff\" }}>Download as CSV</span>\n              </CSVLink>\n            </Button>\n          </Sider>\n          <Content>\n            <Search\n              placeholder=\"Eg: Machine Learning\"\n              width={300}\n              size=\"large\"\n              enterButton\n              prefix={<SearchOutlined />}\n              onChange={queryHandler}\n              value={query}\n            />\n            <MyData data={dataResults} />\n          </Content>\n        </Layout>\n        <Footer></Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}