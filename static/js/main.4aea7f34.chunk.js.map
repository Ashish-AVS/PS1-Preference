{"version":3,"sources":["MyData.js","Loading.js","App.js","index.js"],"names":["MyData","rawData","useState","isModalVisible","setIsModalVisible","modalContent","setModalContent","columns","title","dataIndex","key","render","text","onClick","data","map","el","name","projects","console","log","showModal","branches","tag","color","toUpperCase","colors","visible","onOk","onCancel","proj","index","projKeys","Object","keys","style","textAlign","orientation","Math","floor","random","ele","dataSource","Loading","type","height","width","timeout","marginTop","App","Search","Input","Header","Layout","Footer","Sider","Content","SubMenu","Menu","setData","query","setQuery","branchQuery","setBranchQuery","loader","setLoader","theme","themeHandler","placeholder","setPlaceholder","useEffect","axios","get","then","res","animatePlaceholder","branchResults","branchFuse","Fuse","tokenize","threshold","search","branchDataResults","length","result","item","results","matchAllTokens","dataResults","filterHandler","branch","prev","ph","phCount","printLetter","string","arr","split","origString","setTimeout","prevState","backgroundColor","mode","defaultSelectedKeys","Item","to","HomeOutlined","marginLeft","checkedChildren","FireOutlined","unCheckedChildren","CloudOutlined","defaultChecked","className","defaultOpenKeys","icon","FilterOutlined","DesktopOutlined","marginBottom","TeamOutlined","DownloadOutlined","margin","size","padding","enterButton","prefix","SearchOutlined","onChange","currentTarget","value","path","exact","component","direction","GithubOutlined","spin","window","location","Text","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4aea7f34.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Table, Tag, Modal, Divider } from \"antd\";\r\n\r\nexport default function MyData(rawData) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalContent, setModalContent] = useState([\"Sphagetti Code\"]);\r\n\r\n  const showModal = (text) => {\r\n    setIsModalVisible(true);\r\n    rawData.data.map((el) => {\r\n      if (el.name === text) {\r\n        setModalContent(el.projects);\r\n        // console.log(el.projects)\r\n      }\r\n    });\r\n    // setModalContent(text);\r\n    console.log(rawData);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <span onClick={() => showModal(text)}>{text}</span>,\r\n    },\r\n    {\r\n      title: \"Industry\",\r\n      dataIndex: \"industry\",\r\n      key: \"industry\",\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      dataIndex: \"location\",\r\n      key: \"location\",\r\n    },\r\n\r\n    {\r\n      title: \"Branches\",\r\n      dataIndex: \"branches\",\r\n      key: \"branches\",\r\n      render: (branches) => (\r\n        <div>\r\n          {branches.map((tag) => {\r\n            let color = \"pink\";\r\n            if (tag === \"A7\") color = \"geekblue\";\r\n            if (tag === \"A3\") color = \"gold\";\r\n            if (tag === \"A8\") color = \"lime\";\r\n            if (tag === \"AA\") color = \"green\";\r\n            if (tag === \"Any\") color = \"cyan\";\r\n            if (tag === \"A4\") color = \"orange\";\r\n            if (tag === \"A1\") color = \"red\";\r\n            if (tag === \"A2\") color = \"magenta\";\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const colors = [\r\n    \"#ff4d4f\",\r\n    \"#ffd666\",\r\n    \"#ffc53d\",\r\n    \"#ffec3d\",\r\n    \"#f759ab\",\r\n    \"#9254de\",\r\n    \"#0050b3\",\r\n    \"#ffa940\",\r\n    \"#ffc53d\",\r\n    \"#bae637\",\r\n    \"#52c41a\",\r\n    \"#006d75\"    \r\n  ]\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Project Description\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {\r\n          <div>\r\n            {modalContent.map((proj, index) => {\r\n              let projKeys = Object.keys(proj);\r\n              return (\r\n                <div style={{ textAlign: \"left\" }}>\r\n                  <Divider orientation=\"left\"> <Tag color={colors[Math.floor((Math.random() * 10) + 1)]}>Project #{index + 1}</Tag></Divider>\r\n                  {projKeys.map((ele) => (\r\n                    <div>\r\n                      <b>{ele.toUpperCase()}</b> : {proj[ele]}\r\n                    </div>\r\n                  ))}\r\n                  <br></br>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        }\r\n      </Modal>\r\n      <Table columns={columns} dataSource={rawData.data} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>\r\n            <Loader type=\"Audio\" color=\"#00BFFF\" height={100} width={100} timeout={3000} style={{marginTop:\"200px\"}}/> \r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Input, Space, Layout } from \"antd\";\nimport { Menu, Tag, Button, Typography, Switch } from \"antd\";\nimport {\n  SearchOutlined,\n  DownloadOutlined,\n  GithubOutlined,\n  HomeOutlined,\n  CloudOutlined,\n  DesktopOutlined,\n  FilterOutlined,\n  TeamOutlined,\n  FireOutlined,\n} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport Fuse from \"fuse.js\";\nimport MyData from \"./MyData\";\nimport { CSVLink } from \"react-csv\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loading from \"./Loading\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const { Search } = Input;\n  const { Header, Footer, Sider, Content } = Layout;\n  const { SubMenu } = Menu;\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [branchQuery, setBranchQuery] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [theme, themeHandler] = useState(\"light\");\n  const [placeholder, setPlaceholder] = useState();\n\n  //https://raw.githubusercontent.com/bitsacm/ps1data/master/src/data/ps1_data.json\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://raw.githubusercontent.com/bitsacm/ps1data/master/src/data/ps1_data.json\"\n      )\n      .then((res) => {\n        setData(res.data);\n        setLoader(false);\n        animatePlaceholder(\"Ex: Machine Learning....\")\n      });\n  }, []);\n\n  const options = {\n    // isCaseSensitive: false,\n    // includeScore: false,\n    // shouldSort: true,\n    // includeMatches: false,\n    // findAllMatches: false,\n    // minMatchCharLength: 1,\n    // location: 0,\n    threshold: 0.2,\n    // distance: 100,\n    // useExtendedSearch: false,\n    // ignoreLocation: false,\n    // ignoreFieldNorm: false,\n    tokenize: true,\n    matchAllTokens: true,\n    keys: [\"name\", \"industry\", \"location\", \"branches\"],\n  };\n\n  // const fuse = new Fuse(data, options);\n  // const results = fuse.search(query);\n  // let dataResults = query ? results.map((result) => result.item) : data;\n\n  const branchFuse = new Fuse(data, {\n    keys: [\"branches\", \"industry\"],\n    tokenize: false,\n    threshold: 0.6,\n  });\n  let branchResults;\n  branchQuery.map((el) => {\n    branchResults = branchFuse.search(el);\n  });\n  let branchDataResults = branchQuery.length\n    ? branchResults.map((result) => result.item)\n    : data;\n\n  const fuse = new Fuse(branchDataResults, options);\n  const results = fuse.search(query);\n  let dataResults = query\n    ? results.map((result) => result.item)\n    : branchDataResults;\n\n  const branch = [\n    \"ANY\",\n    \"B1\",\n    \"B2\",\n    \"B3\",\n    \"B4\",\n    \"B5\",\n    \"AA\",\n    \"A1\",\n    \"A2\",\n    \"A3\",\n    \"A4\",\n    \"A5\",\n    \"A7\",\n    \"A8\",\n    \"C6\",\n  ];\n  const industry = [\n    \"ELECTRONICS\",\n    \"FINANCE AND MGMT\",\n    \"MECHANICAL\",\n    \"CHEMICAL\",\n    \" CEMENT\",\n    \"INFRASTRUCTURE\",\n    \"IT\",\n    \"COMPUTER SCIENCE\",\n    \"HEALTH CARE\",\n    \"GOVT RESEARCH LAB\",\n    \"STEEL\",\n    \"OTHERS\",\n  ];\n  const colors = [\n    \"magenta\",\n    \"red\",\n    \"orange\",\n    \"gold\",\n    \"lime\",\n    \"green\",\n    \"cyan\",\n    \"blue\",\n    \"geekblue\",\n    \"purple\",\n  ];\n\n  const queryHandler = ({ currentTarget = {} }) => {\n    const { value } = currentTarget;\n    setQuery(value);\n  };\n\n  const filterHandler = (branch) => {\n    // console.log(dataResults);\n    // setBranchQuery(prev => prev?[...prev, branch]:prev);\n    // dataResults = dataResults.map(el => {\n    //   if(el.branches){\n    //     if(el.branches.indexOf(branch)!==-1) return el;\n    //   }\n    // })\n    setBranchQuery((prev) => [...prev, branch]);\n    console.log(branchQuery);\n    // setQuery(prevQ => prevQ + \" \" + branch)\n          \n  }\n  const animatePlaceholder = (ph) => {\n    console.log(\"FUNCTION CALLED\")\n    let phCount = 0;\n    setPlaceholder(\"\");\n    function printLetter(string) {\n      let arr = string.split('');\n      let origString = string;\n    setTimeout(function(){\n      setPlaceholder(prevState => prevState + arr[phCount]);\n      phCount++;\n      if (phCount < arr.length) {\n        printLetter(origString);\n      }\n    }, 1);\n    }   \n    printLetter(ph);\n}\n  return (\n    <Router>\n      <div>\n        <Layout>\n          <Header style={{ backgroundColor: \"#f0f2F5\" }}>\n            <Menu mode=\"horizontal\" theme={theme} defaultSelectedKeys={[\"1\"]}>\n              <Menu.Item key=\"1\">\n                <Link to=\"/PS1-Preference\">\n                  <HomeOutlined style={{ marginLeft: \"10px\" }} />\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/PS1-Preference/search-stations\">Search Stations</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/PS1-Preference/view-preferences\">View Preferences</Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Link to=\"/PS1-Preference/show-stations\">Show Stations</Link>\n              </Menu.Item>\n              <Menu.Item key=\"5\">\n                <Switch\n                  checkedChildren={<FireOutlined />}\n                  unCheckedChildren={<CloudOutlined />}\n                  defaultChecked\n                  onClick={() =>\n                    themeHandler((prev) =>\n                      prev === \"light\" ? \"dark\" : \"light\"\n                    )\n                  }\n                  style={{}}\n                />\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Layout>\n            <Sider\n              width={300}\n              style={{ marginLeft: \"50px\", marginTop: \"92px\" }}\n              className=\"light\"\n            >\n              <Menu\n                defaultOpenKeys={[\"sub1\", \"sub2\", \"sub3\"]}\n                mode=\"inline\"\n                theme={theme}\n              >\n                <Menu.Item key=\"1\" icon={<FilterOutlined />}>\n                  Filters\n                </Menu.Item>\n                <SubMenu key=\"sub1\" icon={<DesktopOutlined />} title=\"Branch\">\n                  <div style={{ marginLeft: \"23px\" }}>\n                    {branch.map((el, index) => (\n                      <Tag\n                        key={index}\n                        onClick={() => filterHandler(el)}\n                        color={colors[index]}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        {el}\n                      </Tag>\n                    ))}\n                  </div>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Industry\">\n                  <div style={{ marginLeft: \"23px\" }}>\n                    {industry.map((el, index) => (\n                      <Tag\n                        key={index}\n                        color={colors[index] + \"-inverse\"}\n                        style={{ marginBottom: \"10px\" }}\n                        onClick={() => filterHandler(el)}\n                      >\n                        {el}\n                      </Tag>\n                    ))}\n                  </div>\n                </SubMenu>\n\n                <SubMenu\n                  key=\"sub3\"\n                  icon={<DownloadOutlined />}\n                  title=\"Download as CSV\"\n                >\n                  <div style={{ margin: \"23px\", marginLeft: \"28px\" }}>\n                    <Button\n                      type=\"primary\"\n                      icon={<DownloadOutlined />}\n                      size=\"large\"\n                    >\n                      <CSVLink data={dataResults}>\n                        <span style={{ color: \"#fff\" }}>Download as CSV</span>\n                      </CSVLink>\n                    </Button>\n                  </div>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Content style={{ padding: \"20px 50px\" }}>\n              <Search\n                placeholder={placeholder}\n                width={300}\n                size=\"large\"\n                enterButton\n                prefix={<SearchOutlined />}\n                onChange={queryHandler}\n                value={query}\n                style={{ padding: \"18px 0\" }}\n              />\n              \n              {loader ? (\n                <Loading />\n              ) : (\n                <Route\n                  path=\"/PS1-Preference/search-stations\"\n                  exact\n                  component={() => <MyData data={dataResults} />}\n                />\n              )}\n            </Content>\n          </Layout>\n          <Footer>\n            <Space direction=\"horizontal\">\n              <GithubOutlined\n                spin=\"true\"\n                onClick={() =>\n                  (window.location =\n                    \"https://github.com/Ashish-AVS/PS1-Preference\")\n                }\n              />\n              <Typography.Text type=\"secondary\">Ashish AVS</Typography.Text>\n            </Space>\n          </Footer>\n        </Layout>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}