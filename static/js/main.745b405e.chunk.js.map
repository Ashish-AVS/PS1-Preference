{"version":3,"sources":["constants.js","MyData.js","Loading.js","components/Head.js","App.js","index.js"],"names":["industry","colors","branch","MyData","rawData","useState","isModalVisible","setIsModalVisible","modalContent","setModalContent","columns","title","dataIndex","key","render","text","onClick","data","map","el","name","projects","console","log","showModal","color","Math","round","random","Text","branches","tag","toUpperCase","visible","onOk","onCancel","proj","index","projKeys","Object","keys","style","textAlign","orientation","floor","ele","dataSource","Loading","type","height","width","timeout","marginTop","Head","theme","themeHandler","Header","backgroundColor","mode","defaultSelectedKeys","Item","to","HomeOutlined","marginLeft","checkedChildren","FireOutlined","unCheckedChildren","CloudOutlined","defaultChecked","prev","App","Search","Input","Footer","Layout","Sider","Content","SubMenu","Menu","setData","query","setQuery","branchQuery","setBranchQuery","loader","setLoader","placeholder","setPlaceholder","useEffect","axios","get","then","res","animatePlaceholder","branchResults","branchFuse","Fuse","tokenize","threshold","search","branchDataResults","length","result","item","results","matchAllTokens","dataResults","filterHandler","ph","phCount","printLetter","string","arr","split","origString","setTimeout","prevState","className","defaultOpenKeys","icon","FilterOutlined","DesktopOutlined","marginBottom","TeamOutlined","DownloadOutlined","margin","size","padding","enterButton","prefix","SearchOutlined","onChange","currentTarget","value","path","exact","component","direction","GithubOutlined","spin","window","location","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.745b405e.chunk.js","sourcesContent":["export const industry = [\r\n    \"ELECTRONICS\",\r\n    \"FINANCE AND MGMT\",\r\n    \"MECHANICAL\",\r\n    \"CHEMICAL\",\r\n    \" CEMENT\",\r\n    \"INFRASTRUCTURE\",\r\n    \"IT\",\r\n    \"COMPUTER SCIENCE\",\r\n    \"HEALTH CARE\",\r\n    \"GOVT RESEARCH LAB\",\r\n    \"STEEL\",\r\n    \"OTHERS\",\r\n  ];\r\n export const colors = [\r\n    \"magenta\",\r\n    \"red\",\r\n    \"orange\",\r\n    \"gold\",\r\n    \"lime\",\r\n    \"green\",\r\n    \"cyan\",\r\n    \"blue\",\r\n    \"geekblue\",\r\n    \"purple\",\r\n    \"magenta\",\r\n    \"red\",\r\n    \"orange\",\r\n    \"gold\",\r\n    \"lime\",\r\n    \"green\",\r\n    \"cyan\",\r\n    \"blue\",\r\n    \"geekblue\",\r\n    \"purple\"\r\n  ];\r\n\r\n export const branch = [\r\n    \"ANY\",\r\n    \"B1\",\r\n    \"B2\",\r\n    \"B3\",\r\n    \"B4\",\r\n    \"B5\",\r\n    \"AA\",\r\n    \"A1\",\r\n    \"A2\",\r\n    \"A3\",\r\n    \"A4\",\r\n    \"A5\",\r\n    \"A7\",\r\n    \"A8\",\r\n    \"C6\",\r\n  ];","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Table, Tag, Modal, Divider, Typography } from \"antd\";\r\nimport {colors} from './constants';\r\n\r\nexport default function MyData(rawData) {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [modalContent, setModalContent] = useState([\"Sphagetti Code\"]);\r\n\r\n  const showModal = (text) => {\r\n    setIsModalVisible(true);\r\n    rawData.data.map((el) => {\r\n      if (el.name === text) {\r\n        setModalContent(el.projects);\r\n        // console.log(el.projects)\r\n      }\r\n    });\r\n    // setModalContent(text);\r\n    console.log(rawData);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      render: (text) => <span onClick={() => showModal(text)}>{text}</span>,\r\n    },\r\n    {\r\n      title: \"Industry\",\r\n      dataIndex: \"industry\",\r\n      key: \"industry\",\r\n      render: (text) => {\r\n        \r\n        return(\r\n          <Tag color={colors[Math.round(Math.random() * 10)]}> <Typography.Text>{text}</Typography.Text></Tag>\r\n        )\r\n      }\r\n      \r\n    },\r\n    {\r\n      title: \"Location\",\r\n      dataIndex: \"location\",\r\n      key: \"location\",\r\n    },\r\n\r\n    {\r\n      title: \"Branches\",\r\n      dataIndex: \"branches\",\r\n      key: \"branches\",\r\n      render: (branches) => (\r\n        <div>\r\n          {branches.map((tag) => {\r\n            let color = \"pink\";\r\n            if (tag === \"A7\") color = \"geekblue\";\r\n            if (tag === \"A3\") color = \"gold\";\r\n            if (tag === \"A8\") color = \"lime\";\r\n            if (tag === \"AA\") color = \"green\";\r\n            if (tag === \"Any\") color = \"cyan\";\r\n            if (tag === \"A4\") color = \"orange\";\r\n            if (tag === \"A1\") color = \"red\";\r\n            if (tag === \"A2\") color = \"magenta\";\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  // const colors = [\r\n  //   \"#ff4d4f\",\r\n  //   \"#ffd666\",\r\n  //   \"#ffc53d\",\r\n  //   \"#ffec3d\",\r\n  //   \"#f759ab\",\r\n  //   \"#9254de\",\r\n  //   \"#0050b3\",\r\n  //   \"#ffa940\",\r\n  //   \"#ffc53d\",\r\n  //   \"#bae637\",\r\n  //   \"#52c41a\",\r\n  //   \"#006d75\"    \r\n  // ]\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"Project Description\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        {\r\n          <div>\r\n            {modalContent.map((proj, index) => {\r\n              let projKeys = Object.keys(proj);\r\n              return (\r\n                <div style={{ textAlign: \"left\" }}>\r\n                  <Divider orientation=\"left\"> <Tag color={colors[Math.floor((Math.random() * 10) + 1)]}>Project #{index + 1}</Tag></Divider>\r\n                  {projKeys.map((ele) => (\r\n                    <div>\r\n                      <b>{ele.toUpperCase()}</b> : {proj[ele]}\r\n                    </div>\r\n                  ))}\r\n                  <br></br>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        }\r\n      </Modal>\r\n      <Table columns={columns} dataSource={rawData.data} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>\r\n            <Loader type=\"Audio\" color=\"#00BFFF\" height={100} width={100} timeout={3000} style={{marginTop:\"200px\"}}/> \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Menu, Switch, Layout } from \"antd\";\r\nimport {Link} from 'react-router-dom';\r\nimport {HomeOutlined,CloudOutlined,FireOutlined} from \"@ant-design/icons\";\r\n\r\nconst Head = () => {\r\n    const [theme, themeHandler] = useState(\"light\");\r\n\r\n    return (\r\n        <div>\r\n            <Layout.Header style={{ backgroundColor: \"#f0f2F5\" }}>\r\n            <Menu mode=\"horizontal\" theme={theme} defaultSelectedKeys={[\"1\"]}>\r\n              <Menu.Item key=\"1\">\r\n                <Link to=\"/PS1-Preference\">\r\n                  <HomeOutlined style={{ marginLeft: \"10px\" }} />\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <Link to=\"/PS1-Preference/search-stations\">Search Stations</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\">\r\n                <Link to=\"/PS1-Preference/view-preferences\">View Preferences</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\">\r\n                <Link to=\"/PS1-Preference/show-stations\">Show Stations</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"5\">\r\n                <Switch\r\n                  checkedChildren={<FireOutlined />}\r\n                  unCheckedChildren={<CloudOutlined />}\r\n                  defaultChecked\r\n                  onClick={() =>\r\n                    themeHandler((prev) =>\r\n                      prev === \"light\" ? \"dark\" : \"light\"\r\n                    )\r\n                  }\r\n                  style={{}}\r\n                />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Layout.Header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Head;\r\n/*\r\n\r\n<Header style={{ backgroundColor: \"#f0f2F5\" }}>\r\n            <Menu mode=\"horizontal\" theme={theme} defaultSelectedKeys={[\"1\"]}>\r\n              <Menu.Item key=\"1\">\r\n                <Link to=\"/PS1-Preference\">\r\n                  <HomeOutlined style={{ marginLeft: \"10px\" }} />\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <Link to=\"/PS1-Preference/search-stations\">Search Stations</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\">\r\n                <Link to=\"/PS1-Preference/view-preferences\">View Preferences</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\">\r\n                <Link to=\"/PS1-Preference/show-stations\">Show Stations</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"5\">\r\n                <Switch\r\n                  checkedChildren={<FireOutlined />}\r\n                  unCheckedChildren={<CloudOutlined />}\r\n                  defaultChecked\r\n                  onClick={() =>\r\n                    themeHandler((prev) =>\r\n                      prev === \"light\" ? \"dark\" : \"light\"\r\n                    )\r\n                  }\r\n                  style={{}}\r\n                />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n\r\n*/","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Input, Space, Layout } from \"antd\";\nimport { Menu, Tag, Button, Typography } from \"antd\";\nimport {\n  SearchOutlined,\n  DownloadOutlined,\n  GithubOutlined,\n  DesktopOutlined,\n  FilterOutlined,\n  TeamOutlined\n} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport Fuse from \"fuse.js\";\nimport MyData from \"./MyData\";\nimport { CSVLink } from \"react-csv\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loading from \"./Loading\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport {branch, industry, colors} from './constants.js';\nimport Head from \"./components/Head\";\n\nfunction App() {\n  const { Search } = Input;\n  const { Footer, Sider, Content } = Layout;\n  const { SubMenu } = Menu;\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [branchQuery, setBranchQuery] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [theme, themeHandler] = useState(\"light\");\n  const [placeholder, setPlaceholder] = useState();\n\n  //https://raw.githubusercontent.com/bitsacm/ps1data/master/src/data/ps1_data.json\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://raw.githubusercontent.com/bitsacm/ps1data/master/src/data/ps1_data.json\"\n      )\n      .then((res) => {\n        setData(res.data);\n        setLoader(false);\n        animatePlaceholder(\"Ex: Machine Learning....\")\n      });\n  }, []);\n\n  const options = {\n    // isCaseSensitive: false,\n    // includeScore: false,\n    // shouldSort: true,\n    // includeMatches: false,\n    // findAllMatches: false,\n    // minMatchCharLength: 1,\n    // location: 0,\n    threshold: 0.2,\n    // distance: 100,\n    // useExtendedSearch: false,\n    // ignoreLocation: false,\n    // ignoreFieldNorm: false,\n    tokenize: true,\n    matchAllTokens: true,\n    keys: [\"name\", \"industry\", \"location\", \"branches\"],\n  };\n  const branchFuse = new Fuse(data, {\n    keys: [\"branches\", \"industry\"],\n    tokenize: false,\n    threshold: 0.6,\n  });\n  let branchResults;\n  branchQuery.map((el) => {\n    branchResults = branchFuse.search(el);\n  });\n  let branchDataResults = branchQuery.length\n    ? branchResults.map((result) => result.item)\n    : data;\n\n  const fuse = new Fuse(branchDataResults, options);\n  const results = fuse.search(query);\n  let dataResults = query\n    ? results.map((result) => result.item)\n    : branchDataResults;\n\n  const queryHandler = ({ currentTarget = {} }) => {\n    const { value } = currentTarget;\n    setQuery(value);\n  };\n\n  const filterHandler = (branch) => {\n    setBranchQuery((prev) => [...prev, branch]);\n    console.log(branchQuery);\n    // setQuery(prevQ => prevQ + \" \" + branch)\n          \n  }\n  const animatePlaceholder = (ph) => {\n    console.log(\"FUNCTION CALLED\")\n    let phCount = 0;\n    setPlaceholder(\"\");\n    function printLetter(string) {\n      let arr = string.split('');\n      let origString = string;\n    setTimeout(function(){\n      setPlaceholder(prevState => prevState + arr[phCount]);\n      phCount++;\n      if (phCount < arr.length) {\n        printLetter(origString);\n      }\n    }, 100);\n    }   \n    printLetter(ph);\n}\n  return (\n    <Router>\n      <div>\n          <Layout> <Head /> <Layout>\n            <Sider\n              width={300}\n              style={{ marginLeft: \"50px\", marginTop: \"92px\" }}\n              className={theme}\n            >\n              <Menu\n                defaultOpenKeys={[\"sub1\", \"sub2\", \"sub3\"]}\n                mode=\"inline\"\n                theme={theme}\n              >\n                <Menu.Item key=\"1\" icon={<FilterOutlined />}>\n                  Filters\n                </Menu.Item>\n                <SubMenu key=\"sub1\" icon={<DesktopOutlined />} title=\"Branch\">\n                  <div style={{ marginLeft: \"23px\" }}>\n                    {branch.map((el, index) => (\n                      <Tag\n                        key={index}\n                        onClick={() => filterHandler(el)}\n                        color={colors[index]}\n                        style={{ marginBottom: \"10px\" }}\n                      >\n                        <Typography.Text type=\"secondary\">{el}</Typography.Text>\n                      </Tag>\n                    ))}\n                  </div>\n                </SubMenu>\n                <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Industry\">\n                  <div style={{ marginLeft: \"23px\" }}>\n                    {industry.map((el, index) => (\n                      <Tag\n                        key={index}\n                        color={colors[index] + \"-inverse\"}\n                        style={{ marginBottom: \"10px\" }}\n                        onClick={() => filterHandler(el)}\n                      >\n                        {el}\n                      </Tag>\n                    ))}\n                  </div>\n                </SubMenu>\n\n                <SubMenu\n                  key=\"sub3\"\n                  icon={<DownloadOutlined />}\n                  title=\"Download as CSV\"\n                >\n                  <div style={{ margin: \"23px\", marginLeft: \"28px\" }}>\n                    <Button\n                      type=\"primary\"\n                      icon={<DownloadOutlined />}\n                      size=\"large\"\n                    >\n                      <CSVLink data={dataResults}>\n                        <span style={{ color: \"#fff\" }}>Download as CSV</span>\n                      </CSVLink>\n                    </Button>\n                  </div>\n                </SubMenu>\n              </Menu>\n            </Sider>\n            <Content style={{ padding: \"20px 50px\" }}>\n              <Search\n                placeholder={placeholder}\n                width={300}\n                size=\"large\"\n                enterButton\n                prefix={<SearchOutlined />}\n                onChange={queryHandler}\n                value={query}\n                style={{ padding: \"18px 0\" }}\n              />\n              \n              {loader ? (\n                <Loading />\n              ) : (\n                <Route\n                  path=\"/PS1-Preference/search-stations\"\n                  exact\n                  component={() => <MyData data={dataResults} />}\n                />\n              )}\n            </Content>\n          </Layout>\n          <Footer>\n            <Space direction=\"horizontal\">\n              <GithubOutlined\n                spin=\"true\"\n                onClick={() =>\n                  (window.location =\n                    \"https://github.com/Ashish-AVS/PS1-Preference\")\n                }\n              />\n              <Typography.Text type=\"secondary\">Ashish AVS</Typography.Text>\n            </Space>\n          </Footer>\n        </Layout>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}